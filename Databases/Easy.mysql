
# Combine 2 tables

SELECT firstName, lastName, City, state
FROM    Person
LEFT JOIN Address
ON  Person.personId = Address.personId;

# 181. Employees Earning More Than Their Managers

SELECT E.name AS 'Employee'
FROM Employee AS E, Employee AS M
WHERE E.managerId = M.Id AND E.salary > M.salary;

# 182. Duplicate Emails

SELECT email AS 'Email'
FROM Person
GROUP BY email
HAVING COUNT(*) > 1;

# 183. Customers Who Never Order

SELECT name AS 'Customers'
FROM Customers C
LEFT JOIN Orders O
ON O.customerId = C.id
WHERE o.id IS Null;

SELECT name AS 'Customers'
FROM Customers C
WHERE C.id NOT IN (
    SELECT O.customerId FROM Orders O);

SELECT name AS 'Customers'
FROM Customers C
WHERE NOT EXISTs (
    SELECT * FROM Orders O
    WHERE C.id = O.customerId);

# 196. Delete Duplicate Emails

DELETE P FROM Person P
JOIN Person E
WHERE P.email = E.email
AND P.id > E.id;


#197. Rising Temperature

SELECT w1.Id
FROM weather w1, weather w2
WHERE DATE_SUB(w1.recordDate, interval 1 Day) = w2.recordDate 
AND w1.temperature > w2.temperature;

SELECT w1.id
FROM Weather w1, Weather w2
WHERE w1.temperature > w2.temperature 
AND DATEDIFF(w1.recordDate, w2.recordDate) =1;

# big country

SELECT name, population, area
FROM World
WHERE area >=3000000 OR population >=25000000;

# classes with more than 5 students
SELECT class
FROM Courses
GROUP BY class
HAVING COUNT(student)>=5;

# not boring movies

SELECT id, movie, description, rating
FROM Cinema
WHERE description != 'boring'
    AND ID%2 != 0
ORDER BY rating DESC;